generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")

}

model Post {
  id          Int      @id @default(autoincrement())
  name        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdById String
  createdBy   User     @relation(fields: [createdById], references: [id])

  @@index([name])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  habits        Habit[]
  posts         Post[]
  sessions      Session[]
  journalEntries JournalEntry[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Priority {
  id     String  @id @default(cuid())
  title  String
  habits Habit[]
}

model Habit {
  id               String       @id @default(cuid())
  title            String
  description      String?
  action           String
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  createdById      String
  priorityId       String?
  currentStreak    Int          @default(0)
  priority         Priority?    @relation(fields: [priorityId], references: [id])
  createdBy        User         @relation(fields: [createdById], references: [id])
  entries          HabitEntry[]
  metricUnit       String 
  metricQuantity   Int

  @@index([title])
}


model HabitEntry {
  id        String   @id @default(cuid())
  habitId   String
  timestamp DateTime @default(now())
  habit     Habit    @relation(fields: [habitId], references: [id])

  @@index([timestamp])
  @@index([habitId])
}
model JournalEntry {
  id            String @id @default(cuid())
  title         String 
  createdById   String
  createdBy     User  @relation(fields: [createdById], references: [id])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  // JSONContent   JSONContent?
  jsonContent   Json 
}



